server:
  port: 5000
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
    
spring:
  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp
      
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${rds.hostname}:${rds.port}/${rds.db.name}?serverTimezone=Asia/Seoul
    username: ${rds.username}
    password: ${rds.password}
    
  jpa:
    open-in-view: true # FetchType.LAZY 사용할려면 true 컨트롤러 시작과 끝에서 영속성 컨텐츠가 열리고 닫힘
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl # Entity 변수명을 그대로 사용해서 컬럼만듬
      use-new-id-generator-mappings: false # JAP넘버링 전략을 사용하지 않음
    show-sql: true # Console 창에 쿼리문 보여줌
    properties:
      hibernate.format_sql: true # Console 창에 쿼리문 이쁘게 해줌

  jackson:
    serialization:
      fail-on-empty-beans: false
      
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${google.id}
            client-secret: ${google.secret}
            scope:
            - email
            - profile
            
          facebook:
            client-id: ${facebook.id}
            client-secret: ${facebook.secret}
            scope:
            - email
            - public_profile
            
          naver:
            client-id: ${naver.id}
            client-secret: ${naver.secret}
            scope:
            - name
            - profile
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:5000/login/oauth2/code/naver
            
          kakao:
            client-id: ${kakao.id}
            client-secret: ${kakao.secret}
            redirect-uri: http://localhost:5000/login/oauth2/code/kakao
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            client-name: Kakao
            scope: 
            - profile_nickname
            - profile_image
             
        provider: 
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.
            
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
      
cos:
  key: ${cos.key}
  
sentry:
  dsn: ${sentry.dsn}


